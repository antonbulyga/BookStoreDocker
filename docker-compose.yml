version: '3.3'
services:

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: "book_store"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 20s
      timeout: 60s
      retries: 5
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    networks:
      springboot-postgres-net:

  bookstore:
    image: bookstore:latest
    container_name: bookstore
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./src:/src
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

    environment:
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/book_store?stringtype=unspecified
    restart: on-failure
    networks:
      springboot-postgres-net:


networks:
  springboot-postgres-net:

